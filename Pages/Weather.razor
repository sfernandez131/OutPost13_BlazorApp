@page "/weather"

@using OutPost13.Data
@using System.Threading;
@using BlazorAnimate;

@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<p>Enter your ZIP code to fetch weather data: </p>

<input type="text" @bind-value="@ZIP" @bind-value:event="oninput" @onkeypress="@Enter" />
<button @onclick="@GetWeatherForcast">Go</button>

@if (forecasts == null && isProcessing)
{
    <p><em>Loading...</em></p>
}
else if (forecasts == null && !isProcessing)
{
    <p><em>Please Enter Your ZIP</em></p>
}
else
{
    <Animate Animation="Animations.SlideLeft" Once="false" Duration="TimeSpan.FromSeconds(.5)" @ref="@anim" IsManual="false">
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    </Animate>
}

@code {
    private Animate anim;

    private void RunAnimation()
    {
        anim.Run();
    }

    private string ZIP;
    private List<WeatherForecast> forecasts;

    bool isProcessing = false;

    public void GetWeatherForcast()
    {
        if (string.IsNullOrEmpty(ZIP))
        {
            return;
        }
        forecasts = ForecastService.GetForecast(ZIP);
        StateHasChanged();
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            isProcessing = true;
            StateHasChanged();
            GetWeatherForcast();
        }
    }
}
